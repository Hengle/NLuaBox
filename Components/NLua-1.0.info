{"Name":"NLua","Id":176,"Alias":"NLua","Description":"NLua is the bind between Lua and .NET\n\n## Features\n\n - Call Lua from C#\n - Call C# from C# \n - Use C# Objects, Properties, Methods from any assembly\n\nFor script eval, you can use DoString or DoFile\n\n```csharp\nusing NLua;\n...\n\n[Preserve (AllMembers = true)]\npublic class Scriptable \n{\n     public Scriptable (string param)\n     { // ... \n     }\n\n     public void DoSomething ()\n     {\n         Console.WriteLine (\"Do Something\");\n     }\n}\n\nvoid ExecuteScript ()\n{\n    string luaFile = \"script.lua\";\n\n    var lua = new Lua ();\n    double val = (double)lua.DoString (\"return math.sin (10)\");\n    lua.DoFile (luaFile);\n}\n```\nIf you want to use your class from Lua you need to use [Preserve] to preserve your class, NLua will call the methods using Reflection. [More info](http://docs.xamarin.com/guides/ios/advanced_topics/linker)\n\n```lua\n\nlocal s = Scriptable (\"My String Parameter\")\ns:DoSomething ()\n\n```\n","Version":"1.0","Summary":"Lua scripting for .NET","QuickStart":"For script eval, you can use DoString or DoFile\n\n```csharp\nusing NLua;\n...\n\n[Preserve (AllMembers = true)]\npublic class Scriptable \n{\n     public Scriptable (string param)\n     { // ... \n     }\n\n     public void DoSomething ()\n     {\n         Console.WriteLine (\"Do Something\");\n     }\n}\n\nvoid ExecuteScript ()\n{\n    string luaFile = \"script.lua\";\n\n    var lua = new Lua ();\n    double val = (double)lua.DoString (\"return math.sin (10)\");\n    lua.DoFile (luaFile);\n}\n```\nIf you want to use your class from Lua you need to use [Preserve] to preserve your class, NLua will call the methods using Reflection. [More info](http://docs.xamarin.com/guides/ios/advanced_topics/linker)\n\n```lua\n\nlocal s = Scriptable (\"My String Parameter\")\ns:DoSomething ()\n\n```","Hash":"5d03811111096e7382cb826361be82fb","TargetPlatforms":["ios"],"TrialHash":null}